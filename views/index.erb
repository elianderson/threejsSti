<!DOCTYPE HTML>
<html>
<head>
  <title>My first Three.js app</title>
  <style>
    canvas { width: 100%; height: 100% }
  </style>
</head>
<body>
  <a class='rotatex'>Rotate X</a>
  <a class='rotatey'>Rotate Y</a>
  <a class='rotatez'>Rotate Z</a>
  <div id="container"></div>
  <script src="jquery.js"></script>
  <script src="http://raw.github.com/mrdoob/three.js/master/build/three.js"></script>
  <script>
    var WIDTH = 1400,
      HEIGHT = 1300;

    // set some camera attributes
    var VIEW_ANGLE = 45,
      ASPECT = WIDTH / HEIGHT,
      NEAR = 0.1,
      FAR = 10000;

    // get the DOM element to attach to
    // - assume we've got jQuery to hand
    var $container = $('#container');

    // create a WebGL renderer, camera
    // and a scene
    var renderer = new THREE.WebGLRenderer();
    var camera =
      new THREE.PerspectiveCamera(
        VIEW_ANGLE,
        ASPECT,
        NEAR,
        FAR);

    var scene = new THREE.Scene();

    // add the camera to the scene
    scene.add(camera);

    // the camera starts at 0,0,0
    // so pull it back
    camera.position.z = 50;

    // start the renderer
    renderer.setSize(WIDTH, HEIGHT);

    // attach the render-supplied DOM element
    $container.append(renderer.domElement);

    // create the sphere's material
    var sphereMaterial =
      new THREE.MeshLambertMaterial(
        {
          color: 0xCC0000
        });

    // create a point light
    var pointLight =
        new THREE.PointLight(0xFFFFFF);

    // set its position
    pointLight.position.x = 10;
    pointLight.position.y = 50;
    pointLight.position.z = 130;

    // add to the scene
    scene.add(pointLight);
    // load ascii model

    var geometry = new THREE.Geometry()
    var jsonLoader = new THREE.JSONLoader();
    jsonLoader.load( "sti.js", function( geometry ) { createScene( geometry ) }, sphereMaterial );

    var sti;
    // draw!
    function createScene(geometry){
      sti = new THREE.Mesh( geometry, sphereMaterial);

      scene.add(sti);
      renderer.render(scene, camera);
      console.log('Rendered')

      $('.rotatey').click(function(){
        sti.rotation.y += .25;
        renderer.render(scene, camera);
      });
      $('.rotatex').click(function(){
        sti.rotation.x += .25;
        renderer.render(scene, camera);
      });
      $('.rotatez').click(function(){
        sti.rotation.z += .25;
        renderer.render(scene, camera);
      });



    }
  </script>
</body>
</html>

